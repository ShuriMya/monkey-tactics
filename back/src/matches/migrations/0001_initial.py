# Generated by Django 4.0.6 on 2022-09-06 11:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('players', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Augment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('stars', models.IntegerField()),
                ('rarity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('queue_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('game_length', models.FloatField()),
                ('game_version', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchComp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement', models.PositiveIntegerField()),
                ('level', models.PositiveIntegerField()),
                ('gold_left', models.IntegerField()),
                ('last_round', models.IntegerField()),
                ('time_eliminated', models.FloatField()),
                ('damage_to_players', models.IntegerField()),
                ('companion', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Trait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('num_units', models.PositiveIntegerField()),
                ('tier', models.PositiveIntegerField()),
                ('max_tiers', models.PositiveIntegerField()),
            ],
        ),
        migrations.AddConstraint(
            model_name='trait',
            constraint=models.UniqueConstraint(fields=('name', 'tier', 'num_units', 'max_tiers'), name='unique_trait_tier'),
        ),
        migrations.AddField(
            model_name='matchcomp',
            name='augments',
            field=models.ManyToManyField(to='matches.augment'),
        ),
        migrations.AddField(
            model_name='matchcomp',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comps', to='matches.match'),
        ),
        migrations.AddField(
            model_name='matchcomp',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='players.player'),
        ),
        migrations.AddField(
            model_name='matchcomp',
            name='traits',
            field=models.ManyToManyField(related_name='traits', to='matches.trait'),
        ),
        migrations.AddField(
            model_name='matchcomp',
            name='units',
            field=models.ManyToManyField(related_name='units', to='matches.champion'),
        ),
        migrations.AddField(
            model_name='champion',
            name='items',
            field=models.ManyToManyField(related_name='items', to='matches.item'),
        ),
        migrations.AddConstraint(
            model_name='matchcomp',
            constraint=models.UniqueConstraint(fields=('player', 'match'), name='unique_player_matchcomp'),
        ),
    ]
